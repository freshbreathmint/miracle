# Version History

## IN DEVELOPMENT

N/A

## Version 0.5.0

Changes: 
    - Build System completely reworked.
        - Task Buttons have been replaced with a new VSCode Extension
            - Adds an activity tab with two sections:
                - Project Configuration: Tree View config.ini editor
                - Build Actions: Buttons for Build/Run/Setup scripts.
        - CMakeLists.txt is now dynamically created.
        - Added 'hot compiling' for libraries (normal debug compile + timestamp)
        - Scripts and file templates have been moved to /scripts sub-directory.
        - Run/Setup scripts replaced. Project can now be setup with a single button press.
        - Valgrind debugger still uses a version of the old run script now renamed valgrind_server.sh
    - Dynamic loading/compiling now based on config.ini in root workspace folder.
    - Moved libapi backend to MiracleLib, which is now MiracleCore.
    - Removed /engine from Framework.
    - Added new default executable icon for windows executables.
    - Release builds will now be properly named executables based on the config.ini application name.

## Version 0.4.0

Changes:
    - Significantly changed project sturcture.
    - Added placeholder 'engine' library.
    - Added MiracleLib library with dynamic arrays.
    - Libraries can now be loaded dynamically or statically.
    - Libraries now automatically link and resolve eachother's functions.
    - You can import functions into the application and other dyanmically loaded libraries.

## Version 0.3.0

Changes:
    - Executable now launches in new external terminal window when using run tasks.
    - Test build now measures prints/floating point operations and times them.
    - Old tasks now reorganized under Linux/WSL Tasks.
    - Added new task: Generate Release Builds
    - Added GDB Debugging for Linux (Currently semi-broken.)
    - Added GDB + Valgrind Debugging for Linux (Not broken!)
    - Added setup file for Windows.

## Version 0.2.0

Changes:
    - Reconfigured Framework to work based on an external application project folder.
    - Build system now uses CMake and a build script instead of basic tasks.
    - Added a script to set up the application project folder for the user.

## Version 0.1.0

Changes:
    - Set up VS Code Extensions & Build Tasks
    - Set up Changelog & Readme
    - Set up gitignore
    - Created initial project structure.
    - Started documentation.